/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.buoi5;

import Controller.Manager;
import Model.ComboBox.CustomerComboBoxModel;
import Model.ComboBox.CustomerSortBoxModel;
import Model.ComboBox.RoomComboBoxModel;
import Model.Customer;
import Model.Room;
import Model.table.CustomerTableSort;
import Model.table.RoomTableSort;
import javax.net.ssl.KeyManagerFactory;
import javax.swing.JRadioButton;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author ADMIN
 */
public class MainApp extends javax.swing.JFrame {

    /**
     * Creates new form MainApp
     */
    public MainApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeRoomGroupBtn = new javax.swing.ButtonGroup();
        statusRoomGroupBtn = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        idCustomerText = new javax.swing.JTextField();
        nameCustomerText = new javax.swing.JTextField();
        addressCustomerText = new javax.swing.JTextField();
        phoneCustomerText = new javax.swing.JTextField();
        typeCustomer = new javax.swing.JComboBox<>();
        saveCustomerBtn = new javax.swing.JButton();
        customerUnselectBtn = new javax.swing.JButton();
        addCustomerBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        idRoomText = new javax.swing.JTextField();
        nameRoomText = new javax.swing.JTextField();
        saveRoomBtn = new javax.swing.JButton();
        unselectionRoomBtn = new javax.swing.JButton();
        addRoomBtn = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        typeRoom = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        typeSortCustomerBox = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        findCustomerByName = new javax.swing.JTextField();
        findCustomerByNameBtn = new javax.swing.JButton();
        sortCustomberBtn = new javax.swing.JButton();
        allTypeRoomBtn = new javax.swing.JRadioButton();
        highQualityRoomBtn = new javax.swing.JRadioButton();
        vipRoomBtn = new javax.swing.JRadioButton();
        normalRoomBtn = new javax.swing.JRadioButton();
        allStatusRoomBtn = new javax.swing.JRadioButton();
        emptyRoomBtn = new javax.swing.JRadioButton();
        notEmptyRoomBtn = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        customerTable.setModel(Manager.getInstance().getCustomerTable());
        customerTable.setShowGrid(true);
        customerTable.setRowSorter(new CustomerTableSort(customerTable.getModel()));
        customerTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event){
                int i = customerTable.getSelectedRow();
                String name = "", id = "", address = "", phone = "";
                if(i == -1){
                    idCustomerText.setText(Manager.getInstance().countCustomer());
                    nameCustomerText.setText(name);
                    addressCustomerText.setText(address);
                    phoneCustomerText.setText(phone);
                    saveCustomerBtn.setEnabled(false);
                    customerUnselectBtn.setEnabled(false);
                    addCustomerBtn.setEnabled(true);
                    return;

                }

                Customer.CustomerType type = (Customer.CustomerType)customerTable.getValueAt(i, 4);
                saveCustomerBtn.setEnabled(true);
                customerUnselectBtn.setEnabled(true);
                addCustomerBtn.setEnabled(false);
                name = (String)customerTable.getValueAt(i, 1);
                id = (String)customerTable.getValueAt(i, 0);
                address =(String)customerTable.getValueAt(i, 2);
                phone = (String)customerTable.getValueAt(i, 3);
                idCustomerText.setText(id);
                nameCustomerText.setText(name);
                addressCustomerText.setText(address);
                phoneCustomerText.setText(phone);
                typeCustomer.setSelectedItem(type);
                String roomId = (String)customerTable.getValueAt(i, 5);
                if(roomId == ""){
                    roomTable.clearSelection();
                }
                for(int j = 0 ; j < roomTable.getRowCount(); ++j){
                    if(roomTable.getValueAt(j, 0).equals(roomId)){
                        roomTable.setRowSelectionInterval(j, j);
                    }
                }

            }
        });
        jScrollPane1.setViewportView(customerTable);

        jLabel1.setText("Số báo danh");

        jLabel2.setText("Tên");

        jLabel3.setText("Địa chỉ");

        jLabel4.setText("Số điện thoại");

        jLabel5.setText("Loại khách hàng");

        idCustomerText.setEditable(false);
        idCustomerText.setText(Manager.getInstance().countCustomer());

        typeCustomer.setModel(new CustomerComboBoxModel());
        typeCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeCustomerActionPerformed(evt);
            }
        });

        saveCustomerBtn.setText("Lưu");
        saveCustomerBtn.setEnabled(false);
        saveCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCustomerBtnActionPerformed(evt);
            }
        });

        customerUnselectBtn.setText("Bỏ chọn");
        customerUnselectBtn.setEnabled(false);
        customerUnselectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerUnselectBtnActionPerformed(evt);
            }
        });

        addCustomerBtn.setText("Thêm mới");
        addCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Mã phòng");

        jLabel7.setText("Tên phòng");

        jLabel8.setText("Loại phòng");

        idRoomText.setEditable(false);
        idRoomText.setText(Manager.getInstance().countRoom());

        saveRoomBtn.setText("Lưu");
        saveRoomBtn.setEnabled(false);
        saveRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveRoomBtnActionPerformed(evt);
            }
        });

        unselectionRoomBtn.setText("Bỏ chọn");
        unselectionRoomBtn.setEnabled(false);
        unselectionRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unselectionRoomBtnActionPerformed(evt);
            }
        });

        addRoomBtn.setText("Thêm mới");
        addRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomBtnActionPerformed(evt);
            }
        });

        jButton7.setText("Đặt phòng");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Trả phòng");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        roomTable.setModel(Manager.getInstance().getRoomTableModel());
        roomTable.setRowSorter(new RoomTableSort(roomTable.getModel()));
        roomTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event){
                int i = roomTable.getSelectedRow();
                String name = "", id = "";
                if(i == -1){
                    nameRoomText.setText("");
                    saveRoomBtn.setEnabled(false);
                    unselectionRoomBtn.setEnabled(false);
                    addRoomBtn.setEnabled(true);
                    idRoomText.setText(Manager.getInstance().countRoom());
                    return;
                }
                id = (String)roomTable.getValueAt(i, 0);
                name = (String)roomTable.getValueAt(i, 1);
                Room.RoomType type = (Room.RoomType)roomTable.getValueAt(i, 2);
                idRoomText.setText(id);
                nameRoomText.setText(name);
                typeRoom.setSelectedItem(type);
                saveRoomBtn.setEnabled(true);
                unselectionRoomBtn.setEnabled(true);
                addRoomBtn.setEnabled(false);
            }
        });
        jScrollPane2.setViewportView(roomTable);

        typeRoom.setModel(new RoomComboBoxModel());

        jLabel9.setText("Cách sắp xếp");

        typeSortCustomerBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeSortCustomerBoxActionPerformed(evt);
            }
        });
        typeSortCustomerBox.setModel(new CustomerSortBoxModel());

        jLabel10.setText("Tìm kiếm");

        findCustomerByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findCustomerByNameActionPerformed(evt);
            }
        });

        findCustomerByNameBtn.setText("OK");
        findCustomerByNameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findCustomerByNameBtnActionPerformed(evt);
            }
        });

        sortCustomberBtn.setText("OK");
        sortCustomberBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortCustomberBtnActionPerformed(evt);
            }
        });

        allTypeRoomBtn.setText("Tất cả");
        typeRoomGroupBtn.add(allTypeRoomBtn);
        allTypeRoomBtn.setSelected(true);
        allTypeRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allTypeRoomBtnActionPerformed(evt);
            }
        });

        highQualityRoomBtn.setText("Chất lượng cao");
        typeRoomGroupBtn.add(highQualityRoomBtn);
        highQualityRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highQualityRoomBtnActionPerformed(evt);
            }
        });

        vipRoomBtn.setText("VIP");
        typeRoomGroupBtn.add(vipRoomBtn);
        vipRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vipRoomBtnActionPerformed(evt);
            }
        });

        normalRoomBtn.setText("Thường");
        typeRoomGroupBtn.add(normalRoomBtn);
        normalRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalRoomBtnActionPerformed(evt);
            }
        });

        allStatusRoomBtn.setText("Tất cả");
        statusRoomGroupBtn.add(allStatusRoomBtn);
        allStatusRoomBtn.setSelected(true);
        allStatusRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allStatusRoomBtnActionPerformed(evt);
            }
        });

        emptyRoomBtn.setText("CÒN TRỐNG");
        statusRoomGroupBtn.add(emptyRoomBtn);
        emptyRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emptyRoomBtnActionPerformed(evt);
            }
        });

        notEmptyRoomBtn.setText("ĐÃ ĐẶT");
        statusRoomGroupBtn.add(notEmptyRoomBtn);
        notEmptyRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notEmptyRoomBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(56, 56, 56)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(idRoomText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(typeRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nameRoomText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addComponent(saveRoomBtn)
                            .addGap(18, 18, 18)
                            .addComponent(unselectionRoomBtn)
                            .addGap(27, 27, 27)
                            .addComponent(addRoomBtn))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(28, 28, 28)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(idCustomerText)
                                        .addComponent(nameCustomerText)
                                        .addComponent(phoneCustomerText)
                                        .addComponent(addressCustomerText)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(typeCustomer, 0, 101, Short.MAX_VALUE))))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(saveCustomerBtn)
                            .addGap(33, 33, 33)
                            .addComponent(customerUnselectBtn)
                            .addGap(31, 31, 31)
                            .addComponent(addCustomerBtn)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jButton7)
                        .addGap(35, 35, 35)
                        .addComponent(jButton8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(findCustomerByName, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(findCustomerByNameBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(typeSortCustomerBox, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(sortCustomberBtn)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(allTypeRoomBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(highQualityRoomBtn)
                        .addGap(18, 18, 18)
                        .addComponent(vipRoomBtn)
                        .addGap(18, 18, 18)
                        .addComponent(normalRoomBtn))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(allStatusRoomBtn)
                        .addGap(18, 18, 18)
                        .addComponent(emptyRoomBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(notEmptyRoomBtn)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(allTypeRoomBtn)
                            .addComponent(highQualityRoomBtn)
                            .addComponent(vipRoomBtn)
                            .addComponent(normalRoomBtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(allStatusRoomBtn)
                            .addComponent(emptyRoomBtn)
                            .addComponent(notEmptyRoomBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idCustomerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(nameCustomerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(addressCustomerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(phoneCustomerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(typeCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(saveCustomerBtn)
                                    .addComponent(customerUnselectBtn)
                                    .addComponent(addCustomerBtn))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(idRoomText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(nameRoomText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(typeRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(unselectionRoomBtn)
                                    .addComponent(saveRoomBtn)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(typeSortCustomerBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sortCustomberBtn)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(addRoomBtn))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton8)
                        .addComponent(jButton7))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(findCustomerByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(findCustomerByNameBtn))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerBtnActionPerformed
        // TODO add your handling code here:
        String name = nameCustomerText.getText();
        String address = addressCustomerText.getText();
        String phone = phoneCustomerText.getText();
        String type = typeCustomer.getSelectedItem().toString();
        Manager.getInstance().addCustomer(name, address, phone, type);
    }//GEN-LAST:event_addCustomerBtnActionPerformed

    private void typeCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeCustomerActionPerformed

    private void addRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomBtnActionPerformed
        // TODO add your handling code here:
        String name = nameRoomText.getText();
        String type = typeRoom.getSelectedItem().toString();
        
        Manager.getInstance().addRoom(name, type);
        
    }//GEN-LAST:event_addRoomBtnActionPerformed

    private void customerUnselectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerUnselectBtnActionPerformed

        customerTable.clearSelection();
    }//GEN-LAST:event_customerUnselectBtnActionPerformed

    private void unselectionRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unselectionRoomBtnActionPerformed
        // TODO add your handling code here:

        roomTable.clearSelection();
    }//GEN-LAST:event_unselectionRoomBtnActionPerformed

    private void saveCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCustomerBtnActionPerformed
        String id = idCustomerText.getText();
        String name = nameCustomerText.getText();
        String address = addressCustomerText.getText();
        String phone = phoneCustomerText.getText();
        String type = typeCustomer.getSelectedItem().toString();
        Manager.getInstance().updateCustomer(id,name, address, phone, type);
        
        
    }//GEN-LAST:event_saveCustomerBtnActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if(customerTable.getSelectionModel().isSelectionEmpty() == true || roomTable.getSelectionModel().isSelectionEmpty() == true)
            return;
        int selectionCustomer = customerTable.getSelectedRow();
        int selectionRoom = roomTable.getSelectedRow();
        String idCustomer = (String)customerTable.getValueAt(selectionCustomer, 0);
        String idRoom = (String)roomTable.getValueAt(selectionRoom, 0);
        Manager.getInstance().bookRoom(idCustomer, idRoom);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if(customerTable.getSelectionModel().isSelectionEmpty() == true) return;
        int selectionCustomer = customerTable.getSelectedRow();
        String idCustomer = (String)customerTable.getValueAt(selectionCustomer, 0);
        Manager.getInstance().checkOut(idCustomer);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void saveRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveRoomBtnActionPerformed
        String id = idRoomText.getText();
        String name = nameRoomText.getText();
        String type = (String)typeRoom.getSelectedItem();
        Manager.getInstance().updateRoom(id, name, type);
    }//GEN-LAST:event_saveRoomBtnActionPerformed

    private void findCustomerByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findCustomerByNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findCustomerByNameActionPerformed

    private void findCustomerByNameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findCustomerByNameBtnActionPerformed
        // TODO add your handling code here:
        String name = findCustomerByName.getText();
        ((CustomerTableSort)customerTable.getRowSorter()).setFilter(name);
    }//GEN-LAST:event_findCustomerByNameBtnActionPerformed

    private void sortCustomberBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortCustomberBtnActionPerformed
        // TODO add your handling code here:
        Customer.CustomerSort type = (Customer.CustomerSort)typeSortCustomerBox.getSelectedItem();
        ((CustomerTableSort)customerTable.getRowSorter()).setSortType(type);
        
    }//GEN-LAST:event_sortCustomberBtnActionPerformed

    private void typeSortCustomerBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeSortCustomerBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeSortCustomerBoxActionPerformed

    private void vipRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vipRoomBtnActionPerformed
         ((RoomTableSort)roomTable.getRowSorter()).setFilterType(vipRoomBtn.getText());
    }//GEN-LAST:event_vipRoomBtnActionPerformed

    private void normalRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalRoomBtnActionPerformed
         ((RoomTableSort)roomTable.getRowSorter()).setFilterType(normalRoomBtn.getText());
    }//GEN-LAST:event_normalRoomBtnActionPerformed

    private void allTypeRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allTypeRoomBtnActionPerformed
        // TODO add your handling code here:
        ((RoomTableSort)roomTable.getRowSorter()).setFilterType(allTypeRoomBtn.getText());
        
    }//GEN-LAST:event_allTypeRoomBtnActionPerformed

    private void highQualityRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highQualityRoomBtnActionPerformed
         ((RoomTableSort)roomTable.getRowSorter()).setFilterType(highQualityRoomBtn.getText());
    }//GEN-LAST:event_highQualityRoomBtnActionPerformed

    private void allStatusRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allStatusRoomBtnActionPerformed
         ((RoomTableSort)roomTable.getRowSorter()).setFilterStatus(allStatusRoomBtn.getText());
    }//GEN-LAST:event_allStatusRoomBtnActionPerformed

    private void emptyRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emptyRoomBtnActionPerformed
          ((RoomTableSort)roomTable.getRowSorter()).setFilterStatus(emptyRoomBtn.getText());
    }//GEN-LAST:event_emptyRoomBtnActionPerformed

    private void notEmptyRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notEmptyRoomBtnActionPerformed
         ((RoomTableSort)roomTable.getRowSorter()).setFilterStatus(notEmptyRoomBtn.getText());
    }//GEN-LAST:event_notEmptyRoomBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCustomerBtn;
    private javax.swing.JButton addRoomBtn;
    private javax.swing.JTextField addressCustomerText;
    private javax.swing.JRadioButton allStatusRoomBtn;
    private javax.swing.JRadioButton allTypeRoomBtn;
    private javax.swing.JTable customerTable;
    private javax.swing.JButton customerUnselectBtn;
    private javax.swing.JRadioButton emptyRoomBtn;
    private javax.swing.JTextField findCustomerByName;
    private javax.swing.JButton findCustomerByNameBtn;
    private javax.swing.JRadioButton highQualityRoomBtn;
    private javax.swing.JTextField idCustomerText;
    private javax.swing.JTextField idRoomText;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameCustomerText;
    private javax.swing.JTextField nameRoomText;
    private javax.swing.JRadioButton normalRoomBtn;
    private javax.swing.JRadioButton notEmptyRoomBtn;
    private javax.swing.JTextField phoneCustomerText;
    private javax.swing.JTable roomTable;
    private javax.swing.JButton saveCustomerBtn;
    private javax.swing.JButton saveRoomBtn;
    private javax.swing.JButton sortCustomberBtn;
    private javax.swing.ButtonGroup statusRoomGroupBtn;
    private javax.swing.JComboBox<String> typeCustomer;
    private javax.swing.JComboBox<String> typeRoom;
    private javax.swing.ButtonGroup typeRoomGroupBtn;
    private javax.swing.JComboBox<String> typeSortCustomerBox;
    private javax.swing.JButton unselectionRoomBtn;
    private javax.swing.JRadioButton vipRoomBtn;
    // End of variables declaration//GEN-END:variables
}
